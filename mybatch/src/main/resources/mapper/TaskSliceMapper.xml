<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wdd.mybatch.core.mapper.TaskSliceMapper">
  <resultMap id="BaseResultMap" type="com.wdd.mybatch.core.po.TaskSlicePO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="task_id" jdbcType="BIGINT" property="taskId" />
    <result column="business_id" jdbcType="VARCHAR" property="businessId" />
    <result column="slice_status" jdbcType="VARCHAR" property="sliceStatus" />
    <result column="slice_data" jdbcType="VARCHAR" property="sliceData" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="total_cnt" jdbcType="BIGINT" property="totalCnt" />
    <result column="success_cnt" jdbcType="BIGINT" property="successCnt" />
    <result column="fail_cnt" jdbcType="BIGINT" property="failCnt" />
    <result column="skip_cnt" jdbcType="BIGINT" property="skipCnt" />
    <result column="round_number" jdbcType="INTEGER" property="roundNumber" />
    <result column="fail_reason" jdbcType="VARCHAR" property="failReason" />
  </resultMap>
  <sql id="Base_Column_List">
    id, task_id, business_id, slice_status, slice_data, start_time, end_time, total_cnt, 
    success_cnt, fail_cnt, skip_cnt, round_number, fail_reason
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from task_slice
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from task_slice
    where id = #{id,jdbcType=BIGINT}
  </delete>

  <insert id="insertSelective" parameterType="com.wdd.mybatch.core.po.TaskSlicePO">
    insert into task_slice
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="taskId != null">
        task_id,
      </if>
      <if test="businessId != null">
        business_id,
      </if>
      <if test="sliceStatus != null">
        slice_status,
      </if>
      <if test="sliceData != null">
        slice_data,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="totalCnt != null">
        total_cnt,
      </if>
      <if test="successCnt != null">
        success_cnt,
      </if>
      <if test="failCnt != null">
        fail_cnt,
      </if>
      <if test="skipCnt != null">
        skip_cnt,
      </if>
      <if test="roundNumber != null">
        round_number,
      </if>
      <if test="failReason != null">
        fail_reason,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="taskId != null">
        #{taskId,jdbcType=BIGINT},
      </if>
      <if test="businessId != null">
        #{businessId,jdbcType=VARCHAR},
      </if>
      <if test="sliceStatus != null">
        #{sliceStatus,jdbcType=VARCHAR},
      </if>
      <if test="sliceData != null">
        #{sliceData,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="totalCnt != null">
        #{totalCnt,jdbcType=BIGINT},
      </if>
      <if test="successCnt != null">
        #{successCnt,jdbcType=BIGINT},
      </if>
      <if test="failCnt != null">
        #{failCnt,jdbcType=BIGINT},
      </if>
      <if test="skipCnt != null">
        #{skipCnt,jdbcType=BIGINT},
      </if>
      <if test="roundNumber != null">
        #{roundNumber,jdbcType=INTEGER},
      </if>
      <if test="failReason != null">
        #{failReason,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.wdd.mybatch.core.po.TaskSlicePO">
    update task_slice
    <set>
      <if test="taskId != null">
        task_id = #{taskId,jdbcType=BIGINT},
      </if>
      <if test="businessId != null">
        business_id = #{businessId,jdbcType=VARCHAR},
      </if>
      <if test="sliceStatus != null">
        slice_status = #{sliceStatus,jdbcType=VARCHAR},
      </if>
      <if test="sliceData != null">
        slice_data = #{sliceData,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="totalCnt != null">
        total_cnt = #{totalCnt,jdbcType=BIGINT},
      </if>
      <if test="successCnt != null">
        success_cnt = #{successCnt,jdbcType=BIGINT},
      </if>
      <if test="failCnt != null">
        fail_cnt = #{failCnt,jdbcType=BIGINT},
      </if>
      <if test="skipCnt != null">
        skip_cnt = #{skipCnt,jdbcType=BIGINT},
      </if>
      <if test="roundNumber != null">
        round_number = #{roundNumber,jdbcType=INTEGER},
      </if>
      <if test="failReason != null">
        fail_reason = #{failReason,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wdd.mybatch.core.po.TaskSlicePO">
    update task_slice
    set task_id = #{taskId,jdbcType=BIGINT},
      business_id = #{businessId,jdbcType=VARCHAR},
      slice_status = #{sliceStatus,jdbcType=VARCHAR},
      slice_data = #{sliceData,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      total_cnt = #{totalCnt,jdbcType=BIGINT},
      success_cnt = #{successCnt,jdbcType=BIGINT},
      fail_cnt = #{failCnt,jdbcType=BIGINT},
      skip_cnt = #{skipCnt,jdbcType=BIGINT},
      round_number = #{roundNumber,jdbcType=INTEGER},
      fail_reason = #{failReason,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="queryById" parameterType="long"
          resultType="com.wdd.mybatch.core.po.TaskSlicePO">
        <![CDATA[
    select id,
           task_id,
           business_id,
           slice_status,
           slice_data,
           total_cnt,
           success_cnt,
           fail_cnt,
           skip_cnt,
           round_number,
           fail_reason,
           start_time,
           end_time,
           update_time
    from task_slice
    where id = #{ id }
      limit 1
    ]]>
    </select>

  <select id="lockById" parameterType="long"
          resultType="com.wdd.mybatch.core.po.TaskSlicePO">
        <![CDATA[
    select id,
           task_id,
           business_id,
           slice_status,
           slice_data,
           total_cnt,
           success_cnt,
           fail_cnt,
           skip_cnt,
           round_number,
           fail_reason,
           start_time,
           end_time,
           update_time
    from task_slice
    where id = #{ id }
      limit 1
        for update
    ]]>
    </select>

  <select id="sumSuccessFailCntByTaskId" parameterType="long" resultType="com.wdd.mybatch.core.vo.TaskSliceProgress">
        <![CDATA[
    select sum(success_cnt) successCnt,
           sum(fail_cnt) failCnt,
           sum(skip_cnt) skipCnt
    from task_slice
    where task_id = #{ taskId }
      limit 1
    ]]>
    </select>

  <select id="queryByTaskIdStatus" resultType="com.wdd.mybatch.core.po.TaskSlicePO">
        <![CDATA[
    select id,
           task_id,
           business_id,
           slice_status,
           slice_data,
           total_cnt,
           success_cnt,
           fail_cnt,
           skip_cnt,
           round_number,
           fail_reason,
           start_time,
           end_time,
           update_time
    from task_slice
    where task_id = #{taskId}
      and slice_status = #{ taskSliceStatus }
      limit #{ limit }
    ]]>
    </select>

  <select id="queryByTaskIdBizId" resultType="com.wdd.mybatch.core.po.TaskSlicePO">
        <![CDATA[
    select id,
           task_id,
           business_id,
           slice_status,
           slice_data,
           total_cnt,
           success_cnt,
           fail_cnt,
           skip_cnt,
           round_number,
           fail_reason,
           start_time,
           end_time,
           update_time
    from task_slice
    where task_id = #{taskId}
      and business_id = #{businessId}
      limit 1
    ]]>
    </select>

  <select id="queryByTaskIdBizIds" resultType="java.lang.String">
    select business_id
    from task_slice
    where task_id = #{taskId}
    and business_id in
    <foreach item="item" collection="businessIds"  open="(" separator="," close=")">
      #{item}
    </foreach>
  </select>

  <select id="queryByTaskId" resultType="com.wdd.mybatch.core.po.TaskSlicePO">
        <![CDATA[
    select id,
           task_id,
           business_id,
           slice_status,
           slice_data,
           total_cnt,
           success_cnt,
           fail_cnt,
           skip_cnt,
           round_number,
           fail_reason,
           start_time,
           end_time,
           update_time
    from task_slice
    where task_id = #{taskId}
    ]]>
    </select>

  <select id="countByTaskIdStatus" resultType="long">
        <![CDATA[
    select count(1)
    from task_slice
    where task_id = #{ taskId }
      and slice_status = #{ taskSliceStatus }
    ]]>
    </select>

  <insert id="insert" parameterType="com.wdd.mybatch.core.po.TaskSlicePO" keyProperty="id">
        <![CDATA[
    insert into task_slice (
      id,
      task_id,
      business_id,
      slice_status,
      slice_data,
      total_cnt,
      success_cnt,
      fail_cnt,
      skip_cnt,
      round_number,
      fail_reason,
      start_time,
      end_time,
      add_time,
      update_time
    )
    values (
             #{ id },
             #{ taskId },
             #{ businessId },
             #{ sliceStatus },
             #{ sliceData },
             #{ totalCnt },
             #{ successCnt },
             #{ failCnt },
             #{ skipCnt },
             #{ roundNumber },
             #{ failReason },
             #{ startTime },
             #{ endTime },
             now(),
             now()
           )
    ]]>
    </insert>

  <insert id="insertList" parameterType="com.wdd.mybatch.core.po.TaskSlicePO" keyProperty="id">
    insert into task_slice (
    id,
    task_id,
    business_id,
    slice_status,
    slice_data,
    total_cnt,
    success_cnt,
    fail_cnt,
    skip_cnt,
    round_number,
    fail_reason,
    start_time,
    end_time,
    add_time,
    update_time
    )
    values
    <foreach collection="taskSlicePOs" separator="," item="item">
      (
      #{ item.id },
      #{ item.taskId },
      #{ item.businessId },
      #{ item.sliceStatus },
      #{ item.sliceData },
      #{ item.totalCnt },
      #{ item.successCnt },
      #{ item.failCnt },
      #{ item.skipCnt },
      #{ item.roundNumber },
      #{ item.failReason },
      #{ item.startTime },
      #{ item.endTime },
      now(),
      now()
      )
    </foreach>
  </insert>

  <update id="updateById" parameterType="com.wdd.mybatch.core.po.TaskSlicePO">
        <![CDATA[
    update task_slice set
                        slice_status = #{ sliceStatus },
                        total_cnt = #{ totalCnt },
                        success_cnt =    #{ successCnt },
                        fail_cnt = #{ failCnt },
                        skip_cnt = #{ skipCnt },
                        round_number = #{ roundNumber },
                        start_time = #{ startTime },
                        end_time = #{ endTime },
                        slice_data = #{ sliceData },
                        fail_reason = #{ failReason },
                        update_time = now()
    where id = #{ id }
    ]]>
    </update>

  <delete id="deleteById" parameterType="long">
        <![CDATA[
    delete
    from task_slice
    where id = #{ id }
    ]]>
    </delete>
</mapper>